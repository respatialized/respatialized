
âœ³(ns respatialized.statistical-rethinking.chapter2
    (:require #_[tablecloth.api :as api]
              [fastmath.stats :as stats]
              [fastmath.random :as random]
              [clojure.data.json :as json]
              [clojure.string :as str]
              [applied-science.darkstar :as darkstar]
              [respatialized.styles :as styles])) ðŸ”š

âœ³(def metadata {:title "Statistical Rethinking, Chapter 2"
               :page-style styles/stat-rethinking-css})ðŸ”š

âœ³=[:div
   [:h1 "Small Worlds & Large Worlds"]
   [:h4 (:title metadata)]
   [:hr]]ðŸ”š

âœ³=[:h2 "Concepts"]ðŸ”š
Chapter 2 introduces the distinction between the world of a model and the world in which that model is deployed. This can be thought of many ways, including the distinction between observed data and unobserved data, or perhaps more broadly, the difference between the data through which we observe the world and the real-world thing that we think is measured or represented by the data.

âœ³=[:h2 "Globe Trials"]ðŸ”š
âœ³+(def globe-samples [:W :L :W :W :W :L :W :L :W])ðŸ”š
âœ³+(def globe-grid (range 0 1 0.01))ðŸ”š
âœ³+(def globe-dist (random/distribution :uniform-real {:min 0 :max 1}))ðŸ”š
âœ³+(defn globe-prior-1 [samples] (map #(random/probability globe-dist %) samples))ðŸ”š
âœ³(defn edn->vl [edn-spec]
   (darkstar/vega-lite-spec->svg (json/write-str edn-spec)))ðŸ”š

âœ³=(let [vs (map (fn [v] {:p v :density
                          (random/probability globe-dist v)}) globe-grid)]
     [:figure [:figcaption [:strong "Plot of uniform prior"]]
      (edn->vl
       {:config styles/stat-rethinking-vl
        :data {:values vs}
        :width 260 :height 260
        :mark :line
        :encoding {:x {:field :p :type :quantitative}
                   :y {:field :density :type :quantitative}}})]) ðŸ”š

This representation is of our "naive" prior - that all proportions of land and water on the globe's surface are equally likely.

âœ³=[:h2 "Probability vs Likelihood"]ðŸ”š

Translating the conceptions from the notation used by base R to Clojure +
âœ³=[:code [:a {:href "https://cljdoc.org/d/generateme/fastmath/2.1.8/api/fastmath.random"} "fastmath.random"]]ðŸ”š distributions.


âœ³=[:pre [:ul [:li [:code {:class "language-r"} "x -> dbinom(x, 10, 0.5) - probability"]]
[:li [:code {:class "language-r"} "p -> dbinom(4, 10, p) - likelihood"]]]
]ðŸ”š

âœ³+(defn dbinom [x size prob]
   (let [d (random/distribution :binomial {:trials size :p prob})]
     (random/pdf d x)))ðŸ”š

âœ³+ (fn [x] (dbinom x 10 0.5)) ; probability ðŸ”š
âœ³+ (fn [p] (dbinom 4 10 p)) ; likelihood ðŸ”š

âœ³=[:h2 "Grid Approximation"]ðŸ”š

The textbook's accompanying library provides a âœ³=[:code "gridap"]ðŸ”š function. This set of solutions is in Clojure, so a novel implementation is necessary.

âœ³+(defn trials->grid-pdf [trials success-pred? grid-values]
   (let [n (count trials)
         successes (count (filter success-pred? trials))]
     (mapv (fn prob [v]
               {:p v :d (dbinom successes n v) }) grid-values)))ðŸ”š

This function allows for iteration over subsets of the trials observed:

âœ³=(let [trials [:W :L :W :W :W :L :W :L :W]
        subtrials (mapv #(take % trials) (range 1 (inc (count trials))))]
  (apply list
         (map (fn [t] [:figure {:style "grid-column: span 1; grid-column-start: auto; display: inline-block;"} [:figcaption {:style "font-size: 0.65em;"} (str/join " " (map name t))]
                       (edn->vl {:data {:values (trials->grid-pdf t #(= :W %) globe-grid)}
                                 :config styles/stat-rethinking-vl
                                 :width 100 :height 100
                                 :mark :line
                                 :encoding {:x {:field :p :type :quantitative}
                                            :y {:field :d :type :quantitative}}})])
              subtrials)))ðŸ”š

Notes from discussion on 2022/09/16, according to Daniel: we have two parameters: the proportion of water in the world, and the number of times we have observed water (one is continuous, the other is discrete). The beta distribution is appropriate to the former because it's continuous, and the binomial distribution is appropriate to the latter because it is known and discrete. The binomial distribution is what gives us our likelihood.

Probabilistic story:
random WaterProportion
random W (0/1) -- whether we saw water in one trial


âœ³=[:h2 "2.6 - Practice"]ðŸ”š
âœ³(def exercises
    [{:id "2E1"
      :question [:div "Which of the expressions below correspond to the statement: "
                 [:em "the probability of rain on Monday?"]
                 [:ol [:li "Pr(rain)"]
                  [:li "Pr(rain|Monday)"]
                  [:li "Pr(Monday|rain)"]
                  [:li "Pr(rain,Monday)/Pr(Monday)"]]]
      :answer/mine "(2) and (4); they are equivalent."
      :answer/official nil}
     {:id "2E2"
      :question [:div "Which of the following statements correspond to the expression: Pr(Monday|rain)"
                 [:ol [:li "The probability of rain on Monday."]
                  [:li "The probability of rain, given that it is Monday."]
                  [:li "The probability that it is Monday, given that it is raining."]
                  [:li "The probability that it is Monday and that it is raining."]]]
      :answer/mine "(3)."
      :answer/official nil}
     {:id "2E3"
      :question [:div "Which of the expressions below correspond to the statement: "
                 [:em "the probability that it is Monday, given that it is raining?"]
                 [:ol
                  [:li "Pr(Monday|rain)"]
                  [:li "Pr(rain|Monday)"]
                  [:li "Pr(rain|Monday) Pr(Monday)"]
                  [:li "Pr(rain|Monday) Pr(Monday) / Pr(rain)"]
                  [:li "Pr(Monday|rain) Pr(rain) / Pr(Monday)"]]]
      :answer/mine "(1)."
      :answer/official "(1) and (4)."}
     {:id "2E4"
      :question [:div "The Bayesian statistician Bruno de Finetti (1906-1985) began his 1973 book on probability theory with the declaration: " [:quote "PROBABILITY DOES NOT EXIST."] " The capitals appeared in the original, so I imagine de Finetti wanted us to shout this statement. What he meant is that probability is a device for describing uncertainty from the perspective of an observer with limited knowledge; it has no objective reality. Discuss the globe tossing example from the chapter, in light of this statement. What does it mean to say \"the probability of water is 0.7\"?"]
      :answer/mine "In my interpretation, the statement \"the probability of water is 0.7\" means that, across multiple repeated tosses and catches of the globe, we would expect our index finger to be atop water 70% of the time, with our observed data tending to approach this ratio with further successive tosses. It means that any given individual toss has a significantly better than even chance of turning up water; water is the 'expected value' for an individual toss."}
     (let [s1 [:W , :W , :W] s2 [:W , :W , :W , :L]
           s3 [:L, :W, :W, :L, :W, :W, :W]
           figures
           (apply list
                  (map (fn [t]
                         [:figure {:style "grid-column: span 1; grid-column-start: auto; display: inline-block;"}
                          [:figcaption {:style "font-size: 0.65em;"} (str/join " " (map name t))]
                          (edn->vl {:data {:values (trials->grid-pdf t #(= :W %) globe-grid)}
                                    :config styles/stat-rethinking-vl
                                    :width 100 :height 100
                                    :mark :line
                                    :encoding {:x {:field :p :type :quantitative}
                                               :y {:field :d :type :quantitative}}})])
                       [s1 s2 s3]))]
       {:id "2M1"
        :question [:div "Recall the globe tossing model from the chapter. Compute and plot the grid approximate posterior distribution for each of the following sets of observations. In each case, assume a uniform prior for " [:em "p"] "." [:ol [:li (str/join "" (map name s1))] [:li (str/join (map name s2)) ] [:li (str/join (map name s3))]]]
        :answer/mine figures
        })])ðŸ”š


âœ³(defn display-answer [{:keys [id question answer/mine answer/official]}]
  [:figure [:figcaption "Question " id]
   question
   (if mine [:details [:summary "My answer"] mine])
   (if official [:details [:summary "Official answer"] official])])ðŸ”š

âœ³= (apply conj [:div] (for [e exercises] (display-answer e)))ðŸ”š
