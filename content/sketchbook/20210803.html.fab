âœ³(ns respatialized.sketchbook.20210803
(:require [hickory.core :as hickory]
  [babashka.curl :as curl]))ðŸ”š

âœ³ (def metadata {:title "20210803: HTML as medium"
:page-style (garden.core/css (garden.stylesheet/at-import "https://respatialized.github.io/css/main.css"))}) ðŸ”š

âœ³=[:h2 (:title metadata)]ðŸ”š

Challenge accepted on this tweet:


âœ³(defn http-get [url]
   )ðŸ”š

âœ³ (defn convo? [elem] (and (vector? elem)
                                     (= (first elem) :div)
                                     (= (get (second elem) :class)
                                        "conversation"))) ðŸ”š

âœ³(defn pull-tweet [tweet-url]
(let [url (clojure.string/replace tweet-url
             #"^https://twitter.com/"
             "https://nitter.1d4.us/")
      tweet-res (curl/get url)
parsed (hickory/as-hiccup (hickory/parse (:body tweet-res)))
content (->> parsed
             (tree-seq #(or (vector? %) (seq? %)) rest)
             (filter (fn [elem] (and (vector? elem)
                                     (= (first elem) :div)
                                     (= (get (second elem) :class)
                                        "conversation"))))
             first)]
content)
    )ðŸ”š

âœ³=(count (curl/get "https://nitter.1d4.us/meekaale/status/1421739097459240962"
  ) )ðŸ”š


âœ³ (def parsed (pull-tweet "https://twitter.com/meekaale/status/1421739097459240962")) ðŸ”š

âœ³=parsed ðŸ”š

This sketchbook post examines how Fabricate can give users the power to assimilate a tweet into their own website's style.

âœ³=[:h3 "Requirements"]ðŸ”š

âœ³=[:ul [:li "No JavaScript"] [:li "No API keys"]
   [:li "Maintain the provenance of the tweet"]
 [:li "Provide metadata about when it was retrieved"]]ðŸ”š
